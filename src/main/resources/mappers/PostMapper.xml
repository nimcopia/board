<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.study.domain.post.PostMapper">

    <!-- tb_post 테이블 전체 컬럼 -->
    <sql id="postColumns">
          id
        , title
        , content
        , content2
        , content3
        , content4
        , exp
        , problem
        , writer
        , ansnum
        , view_cnt
        , recom_cnt
        , notice_yn
        , delete_yn
        , created_date
        , modified_date

    </sql>


    <!-- 게시글 저장 -->
    <insert id="save" parameterType="com.study.domain.post.PostRequest" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO tb_post (
            <include refid="postColumns" />
        ) VALUES (
              #{id}
            , #{title}
            , #{content}
            , #{content2}
            , #{content3}
            , #{content4}
            , #{exp}
            , #{problem}
            , #{writer}
            , #{ansnum}
            , 0
            , 0
            , #{noticeYn}
            , 0
            , NOW()
            , NULL


        )
    </insert>


    <!-- 게시글 상세정보 조회 -->
    <select id="findById" parameterType="long" resultType="com.study.domain.post.PostResponse">
        SELECT
            <include refid="postColumns" />
        FROM
            tb_post
        WHERE
            id = #{value}
    </select>


    <select id="getRecommendCount" resultType="int">
        SELECT recom_cnt
        FROM tb_post
        WHERE id = #{postId}
    </select>

    <!-- 게시글 수정 -->
    <update id="update" parameterType="com.study.domain.post.PostRequest">
        UPDATE tb_post
        SET
              modified_date = NOW()
            , title = #{title}
            , content = #{content}
            , content2 = #{content2}
            , content3 = #{content3}
            , content4 = #{content4}
            , problem = #{problem}
            , writer = #{writer}
            , notice_yn = #{noticeYn}
            , exp = #{exp}
            , ansnum = #{ansnum}
        WHERE
            id = #{id}
    </update>


    <!-- 게시글 삭제 -->
    <delete id="deleteById" parameterType="long">
        UPDATE tb_post
        SET
            delete_yn = 1
        WHERE
            id = #{id}
    </delete>

    <!-- 조회수 증가 -->
    <insert id="viewPlus" parameterType="com.study.domain.post.PostRequest">
        UPDATE tb_post
        SET
            view_cnt = view_cnt+1
        WHERE
            id = #{id}

    </insert>



    <!-- 추천수 증가 -->
    <insert id="recomPlus" parameterType="com.study.domain.post.PostRequest">
        UPDATE tb_post
        SET
            recom_cnt = recom_cnt+1
        WHERE
            id = #{id}

    </insert>

    <!-- 추천수 감소 -->
    <insert id="unrecomPlus" parameterType="com.study.domain.post.PostRequest">
        UPDATE tb_post
        SET
        recom_cnt = recom_cnt-1
        WHERE
        id = #{id}

    </insert>


    <!-- 게시글 리스트 조회 -->
    <select id="findAll" parameterType="com.study.common.dto.SearchDto" resultType="com.study.domain.post.PostResponse">
        SELECT
        <include refid="postColumns" />
        FROM
        tb_post
        WHERE
        delete_yn = 0
        <include refid="search" />
        ORDER BY
        id DESC
        LIMIT #{pagination.limitStart}, #{recordSize}
    </select>

    <!-- 게시글 리스트 조회 -->
    <select id="findRecom" parameterType="com.study.common.dto.SearchDto" resultType="com.study.domain.post.PostResponse">
        SELECT
        <include refid="postColumns" />
        FROM
        tb_post
        WHERE
        delete_yn = 0
        AND recom_cnt >= 5
        <include refid="search" />
        ORDER BY
        id DESC
        LIMIT #{pagination.limitStart}, #{recordSize}
    </select>


    <!-- 게시글 수 카운팅 -->
    <select id="count" parameterType="com.study.common.dto.SearchDto" resultType="int">
        SELECT
        COUNT(*)
        FROM
        tb_post
        WHERE
        delete_yn = 0
        <include refid="search" />
    </select>

    <!-- 게시글 검색 -->
    <sql id="search">
        <!-- 검색 키워드가 있을 때 -->
        <if test="keyword != null and keyword != ''">
            <choose>
                <!-- 검색 유형이 있을 때 -->
                <when test="searchType != null and searchType != ''">
                    <choose>
                        <when test="'title'.equals( searchType )">
                            AND title LIKE CONCAT('%', #{keyword}, '%')
                        </when>
                        <when test="'content'.equals( searchType )">
                            AND content LIKE CONCAT('%', #{keyword}, '%')
                        </when>
                        <when test="'writer'.equals( searchType )">
                            AND writer LIKE CONCAT('%', #{keyword}, '%')
                        </when>
                    </choose>
                </when>

                <!-- 전체 검색일 때 -->
                <otherwise>
                    <if test="keyword == 'recom'">
                        AND recom_cnt &gt;= 5
                    </if>
                    <if test="keyword == 'notice'">
                        AND notice_yn = 1
                    </if>
                    <if test="keyword != 'recom' and keyword != 'notice'">
                        AND (
                        title LIKE CONCAT('%', #{keyword}, '%')
                        OR content LIKE CONCAT('%', #{keyword}, '%')
                        OR writer LIKE CONCAT('%', #{keyword}, '%')
                        )
                    </if>
                </otherwise>
            </choose>
        </if>
    </sql>

</mapper>